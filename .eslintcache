[{"D:\\React\\pribagetriba-backend\\src\\index.js":"1","D:\\React\\pribagetriba-backend\\src\\App.js":"2","D:\\React\\pribagetriba-backend\\src\\reportWebVitals.js":"3","D:\\React\\pribagetriba-backend\\src\\components\\Header.js":"4","D:\\React\\pribagetriba-backend\\src\\components\\Body.js":"5","D:\\React\\pribagetriba-backend\\src\\components\\Footer.js":"6","D:\\React\\pribagetriba-backend\\src\\components\\NoviNalog.js":"7","D:\\React\\pribagetriba-backend\\src\\components\\Nalozi.js":"8","D:\\React\\pribagetriba-backend\\src\\components\\MojiNalozi.js":"9","D:\\React\\pribagetriba-backend\\src\\components\\DetaljiNalogaModal.js":"10","D:\\React\\pribagetriba-backend\\src\\components\\Prijava.js":"11","D:\\react\\pribagetriba-backend\\src\\index.js":"12","D:\\react\\pribagetriba-backend\\src\\reportWebVitals.js":"13","D:\\react\\pribagetriba-backend\\src\\App.js":"14","D:\\react\\pribagetriba-backend\\src\\components\\Footer.js":"15","D:\\react\\pribagetriba-backend\\src\\components\\Body.js":"16","D:\\react\\pribagetriba-backend\\src\\components\\Header.js":"17","D:\\react\\pribagetriba-backend\\src\\components\\NoviNalog.js":"18","D:\\react\\pribagetriba-backend\\src\\components\\MojiNalozi.js":"19","D:\\react\\pribagetriba-backend\\src\\components\\Nalozi.js":"20","D:\\react\\pribagetriba-backend\\src\\components\\Prijava.js":"21","D:\\react\\pribagetriba-backend\\src\\components\\DetaljiNalogaModal.js":"22","D:\\React\\pribagetriba-backend\\src\\components\\NoviDjelatnik.js":"23","D:\\React\\pribagetriba-backend\\src\\components\\Djelatnici.js":"24"},{"size":589,"mtime":1609085264671,"results":"25","hashOfConfig":"26"},{"size":1533,"mtime":1609093286403,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":3153,"mtime":1610462566220,"results":"29","hashOfConfig":"26"},{"size":4832,"mtime":1610462565015,"results":"30","hashOfConfig":"26"},{"size":234,"mtime":1608578601716,"results":"31","hashOfConfig":"26"},{"size":16669,"mtime":1610445012896,"results":"32","hashOfConfig":"26"},{"size":4949,"mtime":1610025329952,"results":"33","hashOfConfig":"26"},{"size":8880,"mtime":1610025284606,"results":"34","hashOfConfig":"26"},{"size":11854,"mtime":1610449775140,"results":"35","hashOfConfig":"26"},{"size":2395,"mtime":1610449360098,"results":"36","hashOfConfig":"26"},{"size":589,"mtime":1609085264671,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"38"},{"size":1533,"mtime":1609093286403,"results":"40","hashOfConfig":"38"},{"size":234,"mtime":1608578601716,"results":"41","hashOfConfig":"38"},{"size":4499,"mtime":1609093315559,"results":"42","hashOfConfig":"38"},{"size":2570,"mtime":1609097110201,"results":"43","hashOfConfig":"38"},{"size":16669,"mtime":1609772904076,"results":"44","hashOfConfig":"38"},{"size":8880,"mtime":1610025284606,"results":"45","hashOfConfig":"38"},{"size":4949,"mtime":1610025329952,"results":"46","hashOfConfig":"38"},{"size":2305,"mtime":1609700509954,"results":"47","hashOfConfig":"38"},{"size":11405,"mtime":1610027404816,"results":"48","hashOfConfig":"38"},{"size":8036,"mtime":1610451511872,"results":"49","hashOfConfig":"26"},{"size":3434,"mtime":1610465680412,"results":"50","hashOfConfig":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"nuiq5z",{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"53"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"53"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"53"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"53"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mx80dl",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"53"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React\\pribagetriba-backend\\src\\index.js",[],["107","108"],"D:\\React\\pribagetriba-backend\\src\\App.js",["109"],"import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header'\nimport Body from './components/Body'\nimport Footer from './components/Footer'\nimport React from 'react'\n\n\n\nclass App extends React.Component {\n\n  constructor(){\n    super()\n    this.state = {\n      username:\"\",\n      password:\"\",\n      sifraUloge:\"\",\n      id:\"\"\n    }\n  }\n\n  componentDidMount(){\n\n    const data = window.localStorage.getItem(\"Drama\")\n    if(data != null){\n\n      const {username, password,sifraUloge,id} =JSON.parse(data)\n\n      console.log(data);\n      \n      this.setState({\n        username:username,\n        password:password,\n        sifraUloge:sifraUloge,\n        id: id\n      })\n    }\n\n\n  }\n\n\n\n\n  handleSubmitLogIn = (data) => {\n \n    this.setState({\n      username:data.username,\n      password:data.password,\n      sifraUloge:data.sifraUloge,\n      id:data.id\n    })\n\n\n    window.localStorage.setItem(\"Drama\",JSON.stringify(this.state))\n    \n  }\n\n  handleSubmitLogOut = (e) => {\n    console.log(\"drama\")\n    window.localStorage.setItem(\"Drama\",JSON.stringify({}))\n  }\n\n  render(){\n    \n    return (\n\n      <div>\n        <Header user={this.state.username}\n          password={this.state.password}\n          sifraUloge={this.state.sifraUloge}\n          handleSubmitLogOut= {this.handleSubmitLogOut}/>\n        <Body \n          sifraUloge = {this.state.sifraUloge}\n          id = {this.state.id}\n          handleSubmitLogIn={this.handleSubmitLogIn} />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","D:\\React\\pribagetriba-backend\\src\\reportWebVitals.js",[],"D:\\React\\pribagetriba-backend\\src\\components\\Header.js",["110","111"],"D:\\React\\pribagetriba-backend\\src\\components\\Body.js",[],"D:\\React\\pribagetriba-backend\\src\\components\\Footer.js",[],"D:\\React\\pribagetriba-backend\\src\\components\\NoviNalog.js",["112","113","114","115","116","117"],"import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport '../style.css'\r\n\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n\r\n    let valid = true;\r\n    Object.values(formErrors).forEach(val => {\r\n        val.length > 0 && (valid = false);\r\n    })\r\n\r\n    console.log(formErrors)\r\n    Object.values(rest).forEach(val => {\r\n\r\n        val === \"\" && (valid = false);\r\n    })\r\n\r\n    return valid;\r\n};\r\n\r\n\r\nclass NoviNalog extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            ime: \"\",\r\n            prezime: \"\",\r\n            oib: \"\",\r\n            email: \"\",\r\n            adresa: \"\",\r\n            telefon: \"\",\r\n            marka: \"\",\r\n            model: \"\",\r\n            tip: \"\",\r\n            vin: \"\",\r\n            registracija: \"\",\r\n            mjenjac: \"\",\r\n            gorivo: \"\",\r\n            kilometri: \"\",\r\n            snaga: \"\",\r\n            godinaProizvodnje: \"\",\r\n            opisKvara: \"\",\r\n\r\n            formErrors: {\r\n                ime: \"\",\r\n                prezime: \"\",\r\n                oib: \"\",\r\n                adresa: \"\",\r\n                telefon: \"\",\r\n                marka: \"\",\r\n                model: \"\",\r\n                tip: \"\",\r\n                vin: \"\",\r\n                registracija: \"\",\r\n                mjenjac: \"\",\r\n                gorivo: \"\",\r\n                kilometri: \"\",\r\n                snaga: \"\",\r\n                godinaProizvodnje: \"\",\r\n                opisKvara: \"\"\r\n            },\r\n            disabled: true\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (formValid(this.state)) {\r\n            fetch('http://localhost:8080/NoviNalog', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(this.state)\r\n            })\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    alert(result);\r\n                })\r\n\r\n            this.props.history.push('/nalozi')\r\n        } else {\r\n            alert(\"Invalid Form!\")\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        event.preventDefault()\r\n        let name = event.target.name\r\n        let value = event.target.value\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n        if (name === 'oib' && value.length === 11) {\r\n            fetch('http://localhost:8080/dohvatiStranku?oib=' + value)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.id != 0) {\r\n                        this.setState({\r\n                            ime: data.ime,\r\n                            prezime: data.prezime,\r\n                            oib: data.oib,\r\n                            email: data.email,\r\n                            telefon: data.telefon,\r\n                            adresa: data.adresa\r\n\r\n                        })\r\n                    }\r\n                })\r\n        }\r\n\r\n        if (name === 'vin' && value.length === 17) {\r\n            fetch('http://localhost:8080/dohvatiAuto?vin=' + value)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n\r\n                    if (data.id != 0) {\r\n                        this.setState({\r\n                            marka: data.marka,\r\n                            model: data.model,\r\n                            tip: data.tip,\r\n                            vin: data.vin,\r\n                            registracija: data.registracija,\r\n                            mjenjac: data.mjenjac,\r\n                            gorivo: data.gorivo,\r\n                            kilometri: data.kilometri,\r\n                            snaga: data.snaga,\r\n                            godinaProizvodnje: data.godinaProizvodnje\r\n\r\n                        })\r\n                    }\r\n                })\r\n        }\r\n\r\n\r\n\r\n\r\n        let formErrors = this.state.formErrors\r\n        switch (name) {\r\n\r\n            case 'ime':\r\n                formErrors.ime = value.length < 3 ? 'Polje mora sadržavati barem 3 znaka' : ''\r\n                break;\r\n\r\n            case 'prezime':\r\n                formErrors.prezime = value.length < 3 ? 'Polje mora sadržavati barem 3 znaka' : ''\r\n                break;\r\n\r\n            case 'oib':\r\n                formErrors.oib = value.length != 11 ? 'Polje mora sadržavati tocno 11 znakova' : ''\r\n                break;\r\n\r\n            case 'adresa':\r\n                formErrors.adresa = value.length < 3 ? 'Polje mora sadržavati barem 3 znaka' : ''\r\n                break;\r\n\r\n            case 'telefon':\r\n                formErrors.telefon = /^\\d+$/.test(value) ? '' : 'Polje mora sadržavati barem 3 znaka'\r\n                break;\r\n\r\n            case 'marka':\r\n                formErrors.marka = value.length < 3 ? 'Polje mora sadržavati barem 3 znaka' : ''\r\n                break;\r\n\r\n            case 'model':\r\n                formErrors.model = value.length < 2 ? 'Polje mora sadržavati barem 2 znaka' : ''\r\n                break;\r\n\r\n            case 'tip':\r\n                formErrors.tip = value.length < 3 ? 'Polje mora sadržavati barem 3 znaka' : ''\r\n                break;\r\n\r\n            case 'vin':\r\n                formErrors.vin = value.length != 17 ? 'Polje mora sadržavati tocno 17 znakova' : ''\r\n                break;\r\n\r\n            case 'registracija':\r\n                formErrors.registracija = value.length < 4 ? 'Polje mora sadržavati barem 4 znaka' : ''\r\n                break;\r\n\r\n            case 'mjenjac':\r\n                formErrors.mjenjac = value.length < 5 ? 'Polje mora sadržavati barem 5 znaka' : ''\r\n                break;\r\n\r\n            case 'gorivo':\r\n                formErrors.gorivo = value.length < 4 ? 'Polje mora sadržavati barem 4 znaka' : ''\r\n                break;\r\n\r\n            case 'kilometri':\r\n                formErrors.kilometri = /^\\d+$/.test(value) ? '' : 'Polje mora sadržavati samo brojeve'\r\n                break;\r\n\r\n            case 'snaga':\r\n                formErrors.snaga = /^\\d+$/.test(value) ? '' : 'Polje mora sadržavati samo brojeve'\r\n                break;\r\n\r\n            case 'godinaProizvodnje':\r\n                formErrors.godinaProizvodnje = /^\\d+$/.test(value) ? value.length == 4 ? '' : 'Polje mora sadržavati tocno 4 broja' : 'Polje mora sadržavati samo brojeve'\r\n                break;\r\n\r\n            case 'opisKvara':\r\n                formErrors.opisKvara = value.length < 4 ? 'Polje mora sadržavati barem 4 znaka' : ''\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({ formErrors, [name]: value })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"body\">\r\n                <Form onSubmit={this.handleSubmit}>\r\n\r\n                    <h3>Stranka: </h3>\r\n                    <Form.Row>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridOib\">\r\n                            <Form.Label>Oib</Form.Label>\r\n                            <Form.Control name=\"oib\" className={this.state.formErrors.oib.length > 0 ? \"error\" : null}\r\n                                value={this.state.oib} onChange={this.handleChange} placeholder=\"Oib\" />\r\n                            {this.state.formErrors.oib.length > 0 && <span className=\"errorMessage\">{this.state.formErrors.oib}</span>}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridIme\">\r\n                            <Form.Label>Ime</Form.Label>\r\n                            <Form.Control name=\"ime\" className={this.state.formErrors.ime.length > 0 ? \"error\" : null}\r\n                                value={this.state.ime} onChange={this.handleChange} placeholder=\"Ime\" />\r\n                            {this.state.formErrors.ime.length > 0 && <span className=\"errorMessage\">{this.state.formErrors.ime}</span>}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridPrezime\">\r\n                            <Form.Label>Prezime</Form.Label>\r\n                            <Form.Control name=\"prezime\" className={this.state.formErrors.prezime.length > 0 ? \"error\" : null} value={this.state.prezime} onChange={this.handleChange} placeholder=\"Prezime\" />\r\n                            {this.state.formErrors.prezime.length > 0 && <span className=\"errorMessage\">{this.state.formErrors.prezime}</span>}\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control name=\"email\" value={this.state.email} onChange={this.handleChange} type=\"email\" placeholder=\"Enter email\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridAdresa\">\r\n                            <Form.Label>Adresa</Form.Label>\r\n                            <Form.Control name=\"adresa\" className={this.state.formErrors.adresa.length > 0 ? \"error\" : null} value={this.state.adresa} onChange={this.handleChange} placeholder=\"Adresa\" />\r\n                            {this.state.formErrors.adresa.length > 0 && <span className=\"errorMessage\">{this.state.formErrors.adresa}</span>}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridTelefon\">\r\n                            <Form.Label>Telefon</Form.Label>\r\n                            <Form.Control name=\"telefon\" className={this.state.formErrors.telefon.length > 0 ? \"error\" : null} value={this.state.telefon} onChange={this.handleChange} placeholder=\"Telefon\" />\r\n                            {this.state.formErrors.telefon.length > 0 && <span className=\"errorMessage\">{this.state.formErrors.telefon}</span>}\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <hr />\r\n                    <h3>Podaci o vozilu</h3>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridVin\">\r\n                            <Form.Label>VIN oznaka</Form.Label>\r\n                            <Form.Control name=\"vin\" className={this.state.formErrors.vin.length > 0 ? \"error\" : null} value={this.state.vin} onChange={this.handleChange} placeholder=\"vin\" />\r\n                            {this.state.formErrors.vin.length > 0 && <span className=\"errorMessage\">{this.state.formErrors.vin}</span>}\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGridMarka\">\r\n                            <Form.Label>Marka</Form.Label>\r\n                            <Form.Control name=\"marka\" className={this.state.formErrors.marka.length > 0 ? \"error\" : null} value={this.state.marka} onChange={this.handleChange} placeholder=\"marka\" />\r\n                            {this.state.formErrors.marka.length > 0 && <span className=\"errorMessage\">{this.state.formErrors.marka}</span>}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridModel\">\r\n                            <Form.Label>Model</Form.Label>\r\n                            <Form.Control name=\"model\" className={this.state.formErrors.model.length > 0 ? \"error\" : null} value={this.state.model} onChange={this.handleChange} placeholder=\"model\" />\r\n                            {this.state.formErrors.model.length > 0 && <span className=\"errorMessage\">{this.state.formErrors.model}</span>}\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridTip\">\r\n                            <Form.Label>Tip</Form.Label>\r\n                            <Form.Control name=\"tip\" className={this.state.formErrors.tip.length > 0 ? \"error\" : null} value={this.state.tip} onChange={this.handleChange} placeholder=\"tip\" />\r\n                            {this.state.formErrors.tip.length > 0 && <span className=\"errorMessage\">{this.state.formErrors.tip}</span>}\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGridGodinaProizvodnje\">\r\n                            <Form.Label>Godina Proizvodnje</Form.Label>\r\n                            <Form.Control name=\"godinaProizvodnje\" className={this.state.formErrors.godinaProizvodnje.length > 0 ? \"error\" : null} value={this.state.godinaProizvodnje} onChange={this.handleChange} placeholder=\"Godina Proizvodnje\" />\r\n                            {this.state.formErrors.godinaProizvodnje.length > 0 && <span className=\"errorMessage\">{this.state.formErrors.godinaProizvodnje}</span>}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridKilometri\">\r\n                            <Form.Label>Kilometri</Form.Label>\r\n                            <Form.Control name=\"kilometri\" className={this.state.formErrors.kilometri.length > 0 ? \"error\" : null} value={this.state.kilometri} onChange={this.handleChange} placeholder=\"kilometri\" />\r\n                            {this.state.formErrors.kilometri.length > 0 && <span className=\"errorMessage\">{this.state.formErrors.kilometri}</span>}\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridSnaga\">\r\n                            <Form.Label>Snaga u kw</Form.Label>\r\n                            <Form.Control name=\"snaga\" className={this.state.formErrors.snaga.length > 0 ? \"error\" : null} value={this.state.snaga} onChange={this.handleChange} placeholder=\"snaga\" />\r\n                            {this.state.formErrors.snaga.length > 0 && <span className=\"errorMessage\">{this.state.formErrors.snaga}</span>}\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGridGorivo\">\r\n                            <Form.Label>Gorivo</Form.Label>\r\n                            <Form.Control name=\"gorivo\" className={this.state.formErrors.gorivo.length > 0 ? \"error\" : null} value={this.state.gorivo} onChange={this.handleChange} placeholder=\"gorivo\" />\r\n                            {this.state.formErrors.gorivo.length > 0 && <span className=\"errorMessage\">{this.state.formErrors.gorivo}</span>}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridMjenjac\">\r\n                            <Form.Label>Mjenjac</Form.Label>\r\n                            <Form.Control name=\"mjenjac\" className={this.state.formErrors.mjenjac.length > 0 ? \"error\" : null} value={this.state.mjenjac} onChange={this.handleChange} placeholder=\"mjenjac\" />\r\n                            {this.state.formErrors.mjenjac.length > 0 && <span className=\"errorMessage\">{this.state.formErrors.mjenjac}</span>}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridRegistracija\">\r\n                            <Form.Label>Registracija</Form.Label>\r\n                            <Form.Control name=\"registracija\" className={this.state.formErrors.registracija.length > 0 ? \"error\" : null} value={this.state.registracija} onChange={this.handleChange} placeholder=\"registracija\" />\r\n                            {this.state.formErrors.registracija.length > 0 && <span className=\"errorMessage\">{this.state.formErrors.registracija}</span>}\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridOpisKvara\">\r\n                            <Form.Label>Opis kvara</Form.Label>\r\n                            <Form.Control as=\"textarea\" col={3} name=\"opisKvara\" className={this.state.formErrors.opisKvara.length > 0 ? \"error\" : null} value={this.state.opisKvara} onChange={this.handleChange} placeholder=\"opisKvara\" />\r\n                            {this.state.formErrors.opisKvara.length > 0 && <span className=\"errorMessage\">{this.state.formErrors.opisKvara}</span>}\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Kreiraj Nalog\r\n                </Button>\r\n                </Form>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default NoviNalog","D:\\React\\pribagetriba-backend\\src\\components\\Nalozi.js",["118"],"import React from 'react'\r\nimport { Table, Button } from 'react-bootstrap'\r\n\r\nclass Nalozi extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            nalozi: [{\r\n                brojNaloga: \"\",\r\n                opisKvara: \"\",\r\n                status: \"\",\r\n                datumZaprimanja: \"\",\r\n                datumZavrsetka: \"\",\r\n                djelatnikId: \"\",\r\n                komentarDjelatnika: \"\",\r\n                marka: \"\",\r\n                model: \"\",\r\n                tip: \"\",\r\n                ime: \"\",\r\n                prezime: \"\",\r\n                email: \"\",\r\n                telefon: \"\",\r\n                imeDjelatnika: \"\",\r\n                prezimeDjelatnika: \"\"\r\n            }]\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshGrid()\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.refreshGrid()\r\n    }\r\n\r\n    refreshGrid() {\r\n        fetch('http://localhost:8080/sviNalozi')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    nalozi: data\r\n                })\r\n\r\n            })\r\n    }\r\n\r\n    handleButtonPreuzmi = (nalogPreuzmi) => {\r\n\r\n        this.setState(prevState => {\r\n            const updatedState = prevState.nalozi.map(nalog => {\r\n                if (nalog.brojNaloga === nalogPreuzmi.brojNaloga) {\r\n                    nalog.djelatnikId = this.props.id\r\n                }\r\n                return nalog;\r\n            })\r\n            return {\r\n                nalozi: updatedState\r\n            }\r\n        })\r\n\r\n        fetch('http://localhost:8080/preuzmiNalog?brojNaloga=' + nalogPreuzmi.brojNaloga + '&radnikId=' + this.props.id)\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                alert(result);\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"body\">\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Broj naloga</th>\r\n                            <th>Opis kvara</th>\r\n                            <th>Status</th>\r\n                            <th>Datum zaprimanja</th>\r\n                            <th>Datum zavrsetka</th>\r\n                            <th>Marka</th>\r\n                            <th>Model</th>\r\n                            <th>Tip</th>\r\n                            <th>Komentar djelatnika</th>\r\n                            <th>Ime djelatnika</th>\r\n                            <th>Prezime djelatnika</th>\r\n                            <th>Preuzimanje naloga</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.nalozi[0].brojNaloga != \"\" && this.state.nalozi.map(nalog => {\r\n                            return (\r\n                                <tr>\r\n                                    <td>\r\n                                        {nalog.brojNaloga}\r\n                                    </td>\r\n                                    <td>\r\n                                        {nalog.opisKvara}\r\n                                    </td>\r\n                                    <td>\r\n                                        {nalog.status}\r\n                                    </td>\r\n                                    <td>\r\n                                        {nalog.datumZaprimanja}\r\n                                    </td>\r\n                                    <td>\r\n                                        {nalog.datumZavrsetka}\r\n                                    </td>\r\n                                    <td>\r\n                                        {nalog.marka}\r\n                                    </td>\r\n                                    <td>\r\n                                        {nalog.model}\r\n                                    </td>\r\n                                    <td>\r\n                                        {nalog.tip}\r\n                                    </td>\r\n                                    <td>\r\n                                        {nalog.komentarDjelatnika}\r\n                                    </td>\r\n                                    <td>\r\n                                        {nalog.imeDjelatnika}\r\n                                    </td>\r\n                                    <td>\r\n                                        {nalog.prezimeDjelatnika}\r\n                                    </td>\r\n\r\n                                    {nalog.djelatnikId ? <td><Button variant=\"success\" >Preuzeto</Button></td> : <td><Button variant=\"danger\" onClick={() => this.handleButtonPreuzmi(nalog)}>Preuzmi</Button></td>}\r\n                                </tr>\r\n\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Nalozi","D:\\React\\pribagetriba-backend\\src\\components\\MojiNalozi.js",["119","120"],"import React from 'react'\r\nimport { Table, Button, ButtonToolbar } from 'react-bootstrap'\r\nimport DetaljiNalogaModal from './DetaljiNalogaModal'\r\n\r\nclass MojiNalozi extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            nalozi: [{\r\n                brojNaloga: \"\",\r\n                opisKvara: \"\",\r\n                status: \"\",\r\n                datumZaprimanja: \"\",\r\n                datumZavrsetka: \"\",\r\n                djelatnikId: \"\",\r\n                komentarDjelatnika: \"\",\r\n                marka: \"\",\r\n                model: \"\",\r\n                tip: \"\",\r\n                vin: \"\",\r\n                registracija: \"\",\r\n                mjenjac: \"\",\r\n                gorivo: \"\",\r\n                kilometri: \"\",\r\n                snaga: \"\",\r\n                godinaProizvodnje: \"\",\r\n                ime: \"\",\r\n                prezime: \"\",\r\n                email: \"\",\r\n                telefon: \"\"\r\n            }],\r\n            detaljiNalogaModalShow: false\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshGrid();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.refreshGrid();\r\n    }\r\n\r\n    refreshGrid() {\r\n\r\n        if (this.props.sifraUloge === 5) {\r\n\r\n            fetch('http://localhost:8080/naloziPoStranci?id=' + this.props.id)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    this.setState({\r\n                        nalozi: data\r\n                    })\r\n\r\n                })\r\n        } else {\r\n            console.log(this.props.id)\r\n            fetch('http://localhost:8080/naloziPoDjelatniku?id=' + this.props.id)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    this.setState({\r\n                        nalozi: data\r\n                    })\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const { brojNaloga, marka, model, tip, vin, registracija, mjenjac, gorivo, kilometri, snaga, godinaProizvodnje,\r\n            ime, prezime, email, telefon, opisKvara, status, datumZaprimanja, komentarDjelatnika } = this.state\r\n        let detaljiNalogaModalClose = () => this.setState({ detaljiNalogaModalShow: false })\r\n\r\n        return (\r\n            <div className=\"body\">\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Broj naloga</th>\r\n                            <th>Opis kvara</th>\r\n                            <th>Status</th>\r\n                            <th>Datum zaprimanja</th>\r\n                            <th>Datum zavrsetka</th>\r\n                            <th>Marka</th>\r\n                            <th>Model</th>\r\n                            <th>Tip</th>\r\n                            <th>Komentar djelatnika</th>\r\n                            {this.props.sifraUloge != 5 &&\r\n                                <th>Detalji naloga</th>\r\n                            }\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.nalozi.map(nalog => {\r\n                            return (\r\n                                <tr key={nalog.brojNaloga}>\r\n                                    <td>\r\n                                        {nalog.brojNaloga}\r\n                                    </td>\r\n                                    <td>\r\n                                        {nalog.opisKvara}\r\n                                    </td>\r\n                                    <td>\r\n                                        {nalog.status}\r\n                                    </td>\r\n                                    <td>\r\n                                        {nalog.datumZaprimanja}\r\n                                    </td>\r\n                                    <td>\r\n                                        {nalog.datumZavrsetka}\r\n                                    </td>\r\n                                    <td>\r\n                                        {nalog.marka}\r\n                                    </td>\r\n                                    <td>\r\n                                        {nalog.model}\r\n                                    </td>\r\n                                    <td>\r\n                                        {nalog.tip}\r\n                                    </td>\r\n                                    <td>\r\n                                        {nalog.komentarDjelatnika}\r\n                                    </td>\r\n                                    {this.props.sifraUloge != 5 &&\r\n                                        <td>\r\n                                            <ButtonToolbar>\r\n                                                <Button\r\n                                                    variant=\"secondary\"\r\n                                                    onClick={() => this.setState({\r\n                                                        detaljiNalogaModalShow: true,\r\n                                                        brojNaloga: nalog.brojNaloga,\r\n                                                        marka: nalog.marka,\r\n                                                        model: nalog.model,\r\n                                                        tip: nalog.tip,\r\n                                                        vin: nalog.vin,\r\n                                                        registracija: nalog.registracija,\r\n                                                        mjenjac: nalog.mjenjac,\r\n                                                        gorivo: nalog.gorivo,\r\n                                                        kilometri: nalog.kilometri,\r\n                                                        snaga: nalog.snaga,\r\n                                                        godinaProizvodnje: nalog.godinaProizvodnje,\r\n                                                        ime: nalog.ime,\r\n                                                        prezime: nalog.prezime,\r\n                                                        email: nalog.email,\r\n                                                        telefon: nalog.telefon,\r\n                                                        opisKvara: nalog.opisKvara,\r\n                                                        status: nalog.status,\r\n                                                        datumZaprimanja: nalog.datumZaprimanja,\r\n                                                        komentarDjelatnika: nalog.komentarDjelatnika\r\n\r\n                                                    })}\r\n                                                >Detalji</Button>\r\n                                                <DetaljiNalogaModal\r\n                                                    show={this.state.detaljiNalogaModalShow}\r\n                                                    onHide={detaljiNalogaModalClose}\r\n                                                    refreshGrid={this.refreshGrid}\r\n                                                    brojNaloga={brojNaloga}\r\n                                                    marka={marka}\r\n                                                    model={model}\r\n                                                    tip={tip}\r\n                                                    vin={vin}\r\n                                                    registracija={registracija}\r\n                                                    mjenjac={mjenjac}\r\n                                                    gorivo={gorivo}\r\n                                                    kilometri={kilometri}\r\n                                                    snaga={snaga}\r\n                                                    godinaProizvodnje={godinaProizvodnje}\r\n                                                    ime={ime}\r\n                                                    prezime={prezime}\r\n                                                    email={email}\r\n                                                    telefon={telefon}\r\n                                                    opisKvara={opisKvara}\r\n                                                    status={status}\r\n                                                    datumZaprimanja={datumZaprimanja}\r\n                                                    komentarDjelatnika={komentarDjelatnika}\r\n\r\n                                                />\r\n                                            </ButtonToolbar>\r\n                                        </td>\r\n                                    }\r\n\r\n\r\n\r\n                                </tr>\r\n\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default MojiNalozi","D:\\React\\pribagetriba-backend\\src\\components\\DetaljiNalogaModal.js",["121"],"import React from 'react'\r\nimport { Modal, Button, Form, Col } from 'react-bootstrap'\r\n\r\nclass DetaljiNalogaModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        fetch('http://localhost:8080/izmjeniNalog', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                brojNaloga: event.target.brojNaloga.value,\r\n                komentarDjelatnika: event.target.komentarDjelatnika.value,\r\n                status: event.target.status.value\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                alert(result);\r\n            })\r\n        this.props.onHide()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <h3>Podaci o nalogu:</h3>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridBrojNaloga\">\r\n                                <Form.Label>Status</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"brojNaloga\"\r\n                                    disabled\r\n                                    defaultValue={this.props.brojNaloga}\r\n                                    placeholder=\"Broj Naloga\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"formGridMarka\">\r\n                                <Form.Label>Marka</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"marka\"\r\n                                    disabled\r\n                                    defaultValue={this.props.marka}\r\n                                    placeholder=\"Marka\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"formGridModel\">\r\n                                <Form.Label>Model</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"model\"\r\n                                    disabled\r\n                                    defaultValue={this.props.model}\r\n                                    placeholder=\"Model\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"formGridTip\">\r\n                                <Form.Label>Tip</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"tip\"\r\n                                    disabled\r\n                                    defaultValue={this.props.tip}\r\n                                    placeholder=\"Tip\" />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridGorivo\">\r\n                                <Form.Label>Gorivo</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"gorivo\"\r\n                                    disabled\r\n                                    defaultValue={this.props.gorivo}\r\n                                    placeholder=\"Gorivo\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"formGridKilometri\">\r\n                                <Form.Label>Kilometri</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"kilometri\"\r\n                                    disabled\r\n                                    defaultValue={this.props.kilometri}\r\n                                    placeholder=\"Kilometri\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"formGridSnaga\">\r\n                                <Form.Label>Snaga</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"snaga\"\r\n                                    disabled\r\n                                    defaultValue={this.props.snaga}\r\n                                    placeholder=\"Snaga\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"formGridMjenjac\">\r\n                                <Form.Label>Mjenjac</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"mjenjac\"\r\n                                    disabled\r\n                                    defaultValue={this.props.mjenjac}\r\n                                    placeholder=\"Mjenjac\" />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridVin\">\r\n                                <Form.Label>vin</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"vin\"\r\n                                    disabled\r\n                                    defaultValue={this.props.vin}\r\n                                    placeholder=\"Vin\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"formGridRegistracija\">\r\n                                <Form.Label>registracija</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"registracija\"\r\n                                    disabled\r\n                                    defaultValue={this.props.registracija}\r\n                                    placeholder=\"Registracija\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"formGridGodinaProizvodnje\">\r\n                                <Form.Label>GodinaProizvodnje</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"godinaProizvodnje\"\r\n                                    disabled\r\n                                    defaultValue={this.props.godinaProizvodnje}\r\n                                    placeholder=\"GodinaProizvodnje\" />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridBrojIme\">\r\n                                <Form.Label>Ime</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"ime\"\r\n                                    disabled\r\n                                    defaultValue={this.props.ime}\r\n                                    placeholder=\"Ime\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"formGridPrezime\">\r\n                                <Form.Label>Prezime</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"prezime\"\r\n                                    disabled\r\n                                    defaultValue={this.props.prezime}\r\n                                    placeholder=\"Prezime\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"email\"\r\n                                    disabled\r\n                                    defaultValue={this.props.email}\r\n                                    placeholder=\"Email\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"formGridTelefon\">\r\n                                <Form.Label>Telefon</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"telefon\"\r\n                                    disabled\r\n                                    defaultValue={this.props.telefon}\r\n                                    placeholder=\"Telefon\" />\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n\r\n                            <Form.Group as={Col} controlId=\"formGridStatus\">\r\n                                <Form.Label>Status</Form.Label>\r\n                                <Form.Control as=\"select\"\r\n                                    onChange={this.handleChange}\r\n                                    name=\"status\"\r\n                                    defaultValue={this.props.status}\r\n                                >\r\n                                    <option value=\"Zaprimljeno\">Zaprimljeno</option>\r\n                                    <option value=\"Na dizalici\">Na dizalici</option>\r\n                                    <option value=\"Čeka dijelove\">Čeka dijelove</option>\r\n                                    <option value=\"Završeno\">Završeno</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"formGridDatumZaprimanja\">\r\n                                <Form.Label>DatumZaprimanja</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"datumZaprimanja\"\r\n                                    disabled\r\n                                    defaultValue={this.props.datumZaprimanja}\r\n                                    placeholder=\"DatumZaprimanja\" />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridOpisKvara\">\r\n                                <Form.Label>OpisKvara</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows={3}\r\n                                    name=\"opisKvara\"\r\n                                    disabled\r\n                                    defaultValue={this.props.opisKvara}\r\n                                    placeholder=\"OpisKvara\" />\r\n                            </Form.Group>\r\n\r\n\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridKomentarDjelatnika\">\r\n                                <Form.Label>Komentar djelatnika</Form.Label>\r\n                                <Form.Control as=\"textarea\"\r\n                                    name=\"komentarDjelatnika\"\r\n                                    defaultValue={this.props.komentarDjelatnika}\r\n                                    placeholder=\"KomentarDjelatnika\" />\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n\r\n                        <Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\" >\r\n                                Osvježi nalog\r\n                        </Button>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        )\r\n    }\r\n}\r\nexport default DetaljiNalogaModal","D:\\React\\pribagetriba-backend\\src\\components\\Prijava.js",["122","123"],"import React from 'react'\r\nimport { renderIntoDocument } from 'react-dom/test-utils'\r\nimport '../style.css'\r\n\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nclass Prijava extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        e.preventDefault()\r\n        const { name, value } = e.target\r\n        this.setState({ [name]: value })\r\n\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n        fetch('http://localhost:8080/dohvatiRacun?username=' +\r\n            e.target.username.value + '&password=' + e.target.password.value)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.sifraUloge != 0) {\r\n                    this.props.handleSubmitLogIn(data)\r\n\r\n                    if (data.sifraUloge === 5) {\r\n                        this.props.history.push('/mojiNalozi')\r\n                    } else {\r\n                        this.props.history.push('/nalozi')\r\n                    }\r\n                } else {\r\n                    alert(\"Ne postojeci korisnik!!!\")\r\n                }\r\n            })\r\n            .catch(error =>\r\n                alert(error)\r\n\r\n            )\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"centered\">\r\n                <div className=\"gornjaDistanca\"></div>\r\n                <Form className=\"login\" onSubmit={this.handleSubmit}>\r\n                    <Form.Group controlId=\"formBasicUsername\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control name=\"username\" value={this.state.username} onChange={this.handleChange} placeholder=\"Username\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control name=\"password\" value={this.state.password} onChange={this.handleChange} type=\"password\" placeholder=\"Password\" />\r\n                    </Form.Group>\r\n\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Prijava\r\n                    </Button>\r\n                </Form>\r\n                <div className=\"donjaDistanca\"></div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Prijava","D:\\react\\pribagetriba-backend\\src\\index.js",[],"D:\\react\\pribagetriba-backend\\src\\reportWebVitals.js",[],"D:\\react\\pribagetriba-backend\\src\\App.js",["124"],"D:\\react\\pribagetriba-backend\\src\\components\\Footer.js",[],"D:\\react\\pribagetriba-backend\\src\\components\\Body.js",["125"],"D:\\react\\pribagetriba-backend\\src\\components\\Header.js",["126","127"],"D:\\react\\pribagetriba-backend\\src\\components\\NoviNalog.js",["128","129","130","131","132","133"],"D:\\react\\pribagetriba-backend\\src\\components\\MojiNalozi.js",["134","135"],"D:\\react\\pribagetriba-backend\\src\\components\\Nalozi.js",["136"],"D:\\react\\pribagetriba-backend\\src\\components\\Prijava.js",["137","138"],"D:\\react\\pribagetriba-backend\\src\\components\\DetaljiNalogaModal.js",["139"],"D:\\React\\pribagetriba-backend\\src\\components\\NoviDjelatnik.js",["140"],"import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport '../style.css'\r\n\r\n\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n\r\n    let valid = true;\r\n    Object.values(formErrors).forEach(val => {\r\n        val.length > 0 && (valid = false);\r\n    })\r\n\r\n    console.log(formErrors)\r\n    Object.values(rest).forEach(val => {\r\n\r\n        val === \"\" && (valid = false);\r\n    })\r\n\r\n    return valid;\r\n};\r\n\r\nclass NoviDjelatnik extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            ime: \"\",\r\n            prezime: \"\",\r\n            email: \"\",\r\n            telefon: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            vrstaDjelatnika: \"\",\r\n            formErrors: {\r\n                ime: \"\",\r\n                prezime: \"\",\r\n                email: \"\",\r\n                telefon: \"\",\r\n                username: \"\",\r\n                password: \"\",\r\n                vrstaDjelatnika: \"\"\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        e.preventDefault()\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value })\r\n\r\n        let formErrors = this.state.formErrors\r\n        switch (name) {\r\n\r\n            case 'ime':\r\n                formErrors.ime = value.length < 3 ? 'Polje mora sadržavati barem 3 znaka' : ''\r\n                break;\r\n\r\n            case 'prezime':\r\n                formErrors.prezime = value.length < 3 ? 'Polje mora sadržavati barem 3 znaka' : ''\r\n                break;\r\n\r\n            case 'username':\r\n                formErrors.username = value.length < 3 ? 'Polje mora sadržavati barem 3 znaka' : ''\r\n                break;\r\n\r\n            case 'password':\r\n                formErrors.password = value.length < 3 ? 'Polje mora sadržavati barem 3 znaka' : ''\r\n                break;\r\n\r\n            case 'adresa':\r\n                formErrors.adresa = value.length < 3 ? 'Polje mora sadržavati barem 3 znaka' : ''\r\n                break;\r\n\r\n            case 'telefon':\r\n                formErrors.telefon = /^\\d+$/.test(value) ? '' : 'Polje mora sadržavati barem 3 znaka'\r\n                break;\r\n\r\n            case 'vrstaDjelatnika':\r\n                formErrors.vrstaDjelatnika = value.length === 0 ? 'Izaberite vrstu djelatnika' : ''\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({ formErrors, [name]: value })\r\n\r\n        console.log(this.state.ime)\r\n        console.log(this.state.prezime)\r\n        console.log(this.state.username)\r\n        console.log(this.state)\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(this.state)\r\n        if (formValid(this.state)) {\r\n            fetch('http://localhost:8080/noviDjelatnik', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(this.state)\r\n            })\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    alert(result);\r\n                })\r\n\r\n            this.props.history.push('/nalozi')\r\n        } else {\r\n            alert(\"Invalid Form!\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"body\">\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridIme\">\r\n                            <Form.Label>Ime</Form.Label>\r\n                            <Form.Control name=\"ime\" className={this.state.formErrors.ime.length > 0 ? \"error\" : null}\r\n                                value={this.state.ime} onChange={this.handleChange} placeholder=\"Ime\" />\r\n                            {this.state.formErrors.ime.length > 0 && <span className=\"errorMessage\">{this.state.formErrors.ime}</span>}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridPrezime\">\r\n                            <Form.Label>Prezime</Form.Label>\r\n                            <Form.Control name=\"prezime\" className={this.state.formErrors.prezime.length > 0 ? \"error\" : null} value={this.state.prezime} onChange={this.handleChange} placeholder=\"Prezime\" />\r\n                            {this.state.formErrors.prezime.length > 0 && <span className=\"errorMessage\">{this.state.formErrors.prezime}</span>}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control name=\"email\" value={this.state.email} onChange={this.handleChange} type=\"email\" placeholder=\"Enter email\" />\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridTelefon\">\r\n                            <Form.Label>Telefon</Form.Label>\r\n                            <Form.Control name=\"telefon\" className={this.state.formErrors.telefon.length > 0 ? \"error\" : null}\r\n                                value={this.state.telefon}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Telefon\" />\r\n                            {this.state.formErrors.telefon.length > 0 && <span className=\"errorMessage\">{this.state.formErrors.telefon}</span>}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridUsername\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control name=\"username\" className={this.state.formErrors.username.length > 0 ? \"error\" : null}\r\n                                value={this.state.username}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Username\" />\r\n                            {this.state.formErrors.username.length > 0 && <span className=\"errorMessage\">{this.state.formErrors.username}</span>}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control name=\"password\" className={this.state.formErrors.password.length > 0 ? \"error\" : null}\r\n                                value={this.state.password}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Password\" />\r\n                            {this.state.formErrors.password.length > 0 && <span className=\"errorMessage\">{this.state.formErrors.password}</span>}\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridVrstaDjelatnika\">\r\n                            <Form.Label>Vrsta djelatnika</Form.Label>\r\n                            <Form.Control as=\"select\"\r\n                                onChange={this.handleChange}\r\n                                name=\"vrstaDjelatnika\">\r\n                                <option value=\"\">--Izaberite--</option>\r\n                                <option value=\"automehanicar\">Automehaničar</option>\r\n                                <option value=\"prijem vozila\">Prijem Vozila</option>\r\n                            </Form.Control>\r\n                            {this.state.formErrors.vrstaDjelatnika.length > 0 && <span className=\"errorMessage\">{this.state.formErrors.vrstaDjelatnika}</span>}\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Dodaj djelatnika\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default NoviDjelatnik","D:\\React\\pribagetriba-backend\\src\\components\\Djelatnici.js",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":1,"column":8,"nodeType":"147","messageId":"148","endLine":1,"endColumn":12},{"ruleId":"149","severity":1,"message":"150","line":11,"column":5,"nodeType":"151","messageId":"152","endLine":13,"endColumn":6},{"ruleId":"153","severity":1,"message":"154","line":31,"column":40,"nodeType":"155","messageId":"156","endLine":31,"endColumn":42},{"ruleId":"145","severity":1,"message":"157","line":3,"column":24,"nodeType":"147","messageId":"148","endLine":3,"endColumn":27},{"ruleId":"153","severity":1,"message":"154","line":106,"column":33,"nodeType":"155","messageId":"156","endLine":106,"endColumn":35},{"ruleId":"153","severity":1,"message":"154","line":125,"column":33,"nodeType":"155","messageId":"156","endLine":125,"endColumn":35},{"ruleId":"153","severity":1,"message":"154","line":158,"column":47,"nodeType":"155","messageId":"156","endLine":158,"endColumn":49},{"ruleId":"153","severity":1,"message":"154","line":182,"column":47,"nodeType":"155","messageId":"156","endLine":182,"endColumn":49},{"ruleId":"153","severity":1,"message":"158","line":206,"column":83,"nodeType":"155","messageId":"156","endLine":206,"endColumn":85},{"ruleId":"153","severity":1,"message":"154","line":95,"column":58,"nodeType":"155","messageId":"156","endLine":95,"endColumn":60},{"ruleId":"153","severity":1,"message":"154","line":94,"column":52,"nodeType":"155","messageId":"156","endLine":94,"endColumn":54},{"ruleId":"153","severity":1,"message":"154","line":130,"column":60,"nodeType":"155","messageId":"156","endLine":130,"endColumn":62},{"ruleId":"149","severity":1,"message":"150","line":5,"column":5,"nodeType":"151","messageId":"152","endLine":7,"endColumn":6},{"ruleId":"145","severity":1,"message":"159","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":28},{"ruleId":"153","severity":1,"message":"154","line":31,"column":37,"nodeType":"155","messageId":"156","endLine":31,"endColumn":39},{"ruleId":"145","severity":1,"message":"146","line":1,"column":8,"nodeType":"147","messageId":"148","endLine":1,"endColumn":12},{"ruleId":"145","severity":1,"message":"160","line":6,"column":8,"nodeType":"147","messageId":"148","endLine":6,"endColumn":16},{"ruleId":"149","severity":1,"message":"150","line":11,"column":5,"nodeType":"151","messageId":"152","endLine":13,"endColumn":6},{"ruleId":"153","severity":1,"message":"154","line":31,"column":44,"nodeType":"155","messageId":"156","endLine":31,"endColumn":46},{"ruleId":"145","severity":1,"message":"157","line":3,"column":24,"nodeType":"147","messageId":"148","endLine":3,"endColumn":27},{"ruleId":"153","severity":1,"message":"154","line":106,"column":33,"nodeType":"155","messageId":"156","endLine":106,"endColumn":35},{"ruleId":"153","severity":1,"message":"154","line":125,"column":33,"nodeType":"155","messageId":"156","endLine":125,"endColumn":35},{"ruleId":"153","severity":1,"message":"154","line":158,"column":47,"nodeType":"155","messageId":"156","endLine":158,"endColumn":49},{"ruleId":"153","severity":1,"message":"154","line":182,"column":47,"nodeType":"155","messageId":"156","endLine":182,"endColumn":49},{"ruleId":"153","severity":1,"message":"158","line":206,"column":83,"nodeType":"155","messageId":"156","endLine":206,"endColumn":85},{"ruleId":"153","severity":1,"message":"154","line":94,"column":52,"nodeType":"155","messageId":"156","endLine":94,"endColumn":54},{"ruleId":"153","severity":1,"message":"154","line":130,"column":60,"nodeType":"155","messageId":"156","endLine":130,"endColumn":62},{"ruleId":"153","severity":1,"message":"154","line":95,"column":58,"nodeType":"155","messageId":"156","endLine":95,"endColumn":60},{"ruleId":"145","severity":1,"message":"159","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":28},{"ruleId":"153","severity":1,"message":"154","line":31,"column":32,"nodeType":"155","messageId":"156","endLine":31,"endColumn":34},{"ruleId":"149","severity":1,"message":"150","line":5,"column":5,"nodeType":"151","messageId":"152","endLine":7,"endColumn":6},{"ruleId":"145","severity":1,"message":"157","line":3,"column":24,"nodeType":"147","messageId":"148","endLine":3,"endColumn":27},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Row' is defined but never used.","Expected '===' and instead saw '=='.","'renderIntoDocument' is defined but never used.","'TreciTab' is defined but never used.","no-global-assign","no-unsafe-negation"]